{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = update;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _propertyExpr = _interopRequireDefault(require(\"property-expr\"));\n\nvar IS_ARRAY = /^\\d+$/;\n\nfunction update(model, path, value) {\n  var parts = _propertyExpr.default.split(path),\n      newModel = copy(model),\n      part,\n      islast;\n\n  if (newModel == null) newModel = IS_ARRAY.test(parts[0]) ? [] : {};\n  var current = newModel;\n\n  for (var idx = 0; idx < parts.length; idx++) {\n    islast = idx === parts.length - 1;\n    part = clean(parts[idx]);\n    if (islast) current[part] = value;else {\n      current = current[part] = current[part] == null ? IS_ARRAY.test(parts[idx + 1]) ? [] : {} : copy(current[part]);\n    }\n  }\n\n  return newModel;\n}\n\nfunction clean(part) {\n  return isQuoted(part) ? part.substr(1, part.length - 2) : part;\n}\n\nfunction isQuoted(str) {\n  return typeof str === 'string' && str && (str[0] === '\"' || str[0] === \"'\");\n}\n\nfunction copy(value) {\n  return Array.isArray(value) ? value.concat() : value !== null && typeof value === 'object' ? (0, _extends2.default)(new value.constructor(), value) : value;\n}\n\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/samyakjain/Desktop/Metacube/Internship_frontend/node_modules/topeka/updateIn.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","update","_extends2","_propertyExpr","IS_ARRAY","model","path","value","parts","split","newModel","copy","part","islast","test","current","idx","length","clean","isQuoted","substr","str","Array","isArray","concat","constructor","module"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,MAAlB;;AAEA,IAAIC,SAAS,GAAGN,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,IAAIM,aAAa,GAAGP,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAA1C;;AAEA,IAAIO,QAAQ,GAAG,OAAf;;AAEA,SAASH,MAAT,CAAgBI,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;AAClC,MAAIC,KAAK,GAAGL,aAAa,CAACH,OAAd,CAAsBS,KAAtB,CAA4BH,IAA5B,CAAZ;AAAA,MACII,QAAQ,GAAGC,IAAI,CAACN,KAAD,CADnB;AAAA,MAEIO,IAFJ;AAAA,MAGIC,MAHJ;;AAKA,MAAIH,QAAQ,IAAI,IAAhB,EAAsBA,QAAQ,GAAGN,QAAQ,CAACU,IAAT,CAAcN,KAAK,CAAC,CAAD,CAAnB,IAA0B,EAA1B,GAA+B,EAA1C;AACtB,MAAIO,OAAO,GAAGL,QAAd;;AAEA,OAAK,IAAIM,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGR,KAAK,CAACS,MAA9B,EAAsCD,GAAG,EAAzC,EAA6C;AAC3CH,IAAAA,MAAM,GAAGG,GAAG,KAAKR,KAAK,CAACS,MAAN,GAAe,CAAhC;AACAL,IAAAA,IAAI,GAAGM,KAAK,CAACV,KAAK,CAACQ,GAAD,CAAN,CAAZ;AACA,QAAIH,MAAJ,EAAYE,OAAO,CAACH,IAAD,CAAP,GAAgBL,KAAhB,CAAZ,KAAuC;AACrCQ,MAAAA,OAAO,GAAGA,OAAO,CAACH,IAAD,CAAP,GAAgBG,OAAO,CAACH,IAAD,CAAP,IAAiB,IAAjB,GAAwBR,QAAQ,CAACU,IAAT,CAAcN,KAAK,CAACQ,GAAG,GAAG,CAAP,CAAnB,IAAgC,EAAhC,GAAqC,EAA7D,GAAkEL,IAAI,CAACI,OAAO,CAACH,IAAD,CAAR,CAAhG;AACD;AACF;;AAED,SAAOF,QAAP;AACD;;AAED,SAASQ,KAAT,CAAeN,IAAf,EAAqB;AACnB,SAAOO,QAAQ,CAACP,IAAD,CAAR,GAAiBA,IAAI,CAACQ,MAAL,CAAY,CAAZ,EAAeR,IAAI,CAACK,MAAL,GAAc,CAA7B,CAAjB,GAAmDL,IAA1D;AACD;;AAED,SAASO,QAAT,CAAkBE,GAAlB,EAAuB;AACrB,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAA3B,KAAmCA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,IAAkBA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAhE,CAAP;AACD;;AAED,SAASV,IAAT,CAAcJ,KAAd,EAAqB;AACnB,SAAOe,KAAK,CAACC,OAAN,CAAchB,KAAd,IAAuBA,KAAK,CAACiB,MAAN,EAAvB,GAAwCjB,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAAnC,GAA8C,CAAC,GAAGL,SAAS,CAACF,OAAd,EAAuB,IAAIO,KAAK,CAACkB,WAAV,EAAvB,EAAgDlB,KAAhD,CAA9C,GAAuGA,KAAtJ;AACD;;AAEDmB,MAAM,CAAC5B,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = update;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _propertyExpr = _interopRequireDefault(require(\"property-expr\"));\n\nvar IS_ARRAY = /^\\d+$/;\n\nfunction update(model, path, value) {\n  var parts = _propertyExpr.default.split(path),\n      newModel = copy(model),\n      part,\n      islast;\n\n  if (newModel == null) newModel = IS_ARRAY.test(parts[0]) ? [] : {};\n  var current = newModel;\n\n  for (var idx = 0; idx < parts.length; idx++) {\n    islast = idx === parts.length - 1;\n    part = clean(parts[idx]);\n    if (islast) current[part] = value;else {\n      current = current[part] = current[part] == null ? IS_ARRAY.test(parts[idx + 1]) ? [] : {} : copy(current[part]);\n    }\n  }\n\n  return newModel;\n}\n\nfunction clean(part) {\n  return isQuoted(part) ? part.substr(1, part.length - 2) : part;\n}\n\nfunction isQuoted(str) {\n  return typeof str === 'string' && str && (str[0] === '\"' || str[0] === \"'\");\n}\n\nfunction copy(value) {\n  return Array.isArray(value) ? value.concat() : value !== null && typeof value === 'object' ? (0, _extends2.default)(new value.constructor(), value) : value;\n}\n\nmodule.exports = exports[\"default\"];"]},"metadata":{},"sourceType":"script"}