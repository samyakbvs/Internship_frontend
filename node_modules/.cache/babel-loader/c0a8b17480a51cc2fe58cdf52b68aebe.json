{"ast":null,"code":"var _jsxFileName = \"/Users/samyakjain/Desktop/Metacube/Internship_frontend/src/UploadPost.js\";\nimport React, { Component } from 'react';\nimport PostService from './PostService';\nimport $ from 'jquery';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nconst postService = new PostService();\n\nclass UploadPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleFileChange = e => {\n      this.setState({\n        [e.target.ref]: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      var today = new Date();\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \"T\" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \"Z\";\n      let form_data = new FormData();\n      form_data.append('Name', this.state.Name);\n      form_data.append('Init_time', date);\n      form_data.append('Author', this.state.Author);\n      form_data.append('Description', this.state.Description);\n\n      if (this.state.Video != null) {\n        form_data.append('Video', this.state.Video, this.state.Video.name);\n      }\n\n      if (this.state.Image != null) {\n        form_data.append('Image', this.state.Image, this.state.Image.name);\n      }\n\n      if (this.state.Doc != null) {\n        form_data.append('Doc', this.state.Doc, this.state.Doc.name);\n      }\n\n      console.log(form_data);\n      postService.createPost(form_data);\n      e.preventDefault();\n    };\n\n    this.onChangeHandler = event => {};\n\n    this.state = {\n      Name: \"\",\n      Init_time: \"\",\n      Author: \"\",\n      Description: \"\",\n      Video: null,\n      Image: null,\n      Doc: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    $(document).ready(function () {\n      bsCustomFileInput.init();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Title \"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter email\",\n      ref: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Password\",\n      ref: \"Author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      controlId: \"formGridAddress1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Form.Control, {\n      placeholder: \"1234 Main St\",\n      ref: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Form.Row, {\n      style: {\n        marginTop: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Form.File, {\n      id: \"custom-file\",\n      label: \"Custom file input\",\n      \"data-browse\": \"Add Img\",\n      custom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridState\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Form.File, {\n      id: \"custom-file\",\n      label: \"Custom file input\",\n      \"data-browse\": \"Add Vid\",\n      custom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridZip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Form.File, {\n      id: \"custom-file\",\n      label: \"Custom file input\",\n      \"data-browse\": \"Add Doc\",\n      custom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default UploadPost;","map":{"version":3,"sources":["/Users/samyakjain/Desktop/Metacube/Internship_frontend/src/UploadPost.js"],"names":["React","Component","PostService","$","Form","Col","Button","bsCustomFileInput","postService","UploadPost","constructor","props","handleChange","e","setState","target","id","value","handleFileChange","ref","files","handleSubmit","today","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","form_data","FormData","append","state","Name","Author","Description","Video","name","Image","Doc","console","log","createPost","preventDefault","onChangeHandler","event","Init_time","bind","componentDidMount","document","ready","init","render","marginTop"],"mappings":"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","sourcesContent":["import  React, { Component } from  'react';\nimport  PostService  from  './PostService';\nimport $ from 'jquery';\nimport {Form,Col,Button} from 'react-bootstrap'\nimport bsCustomFileInput from 'bs-custom-file-input'\n\nconst  postService  =  new  PostService();\n\n\nclass  UploadPost  extends  Component {\n\n\n\n\nconstructor(props) {\n    super(props);\n\n    this.state = {\n      Name: \"\",\n      Init_time: \"\",\n      Author: \"\",\n      Description: \"\",\n      Video: null,\n      Image: null,\n      Doc: null\n\n      };\nthis.handleSubmit = this.handleSubmit.bind(this)\n}\n\ncomponentDidMount() {\n\n  $(document).ready(function () {\n    bsCustomFileInput.init()\n  })\n}\n\nhandleChange = (e) => {\n  this.setState({\n    [e.target.id]: e.target.value\n  })\n};\n\nhandleFileChange = (e) => {\n  this.setState({\n  [e.target.ref]: e.target.files[0]\n  })\n};\n\nhandleSubmit = (e) => {\n  var today = new Date()\n  var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate() + \"T\" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() +\"Z\";\n\n  let form_data = new FormData();\n\n  form_data.append('Name', this.state.Name);\n  form_data.append('Init_time', date);\n  form_data.append('Author', this.state.Author);\n  form_data.append('Description', this.state.Description);\n  if (this.state.Video != null) {\n    form_data.append('Video', this.state.Video, this.state.Video.name);\n  }\nif (this.state.Image != null) {\n  form_data.append('Image', this.state.Image, this.state.Image.name);\n\n}\nif (this.state.Doc != null) {\n  form_data.append('Doc', this.state.Doc, this.state.Doc.name);\n}\n\n\nconsole.log(form_data)\npostService.createPost(form_data)\n\n  e.preventDefault()\n\n\n\n\n};\n\n\nonChangeHandler=event=>{\n\n}\n\nrender() {\n\n  return (\n\n  <div className=\"container\">\n  <Form>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"formGridEmail\">\n        <Form.Label>Title </Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter email\" ref=\"Name\" />\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"formGridPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Password\" ref=\"Author\"  />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Group controlId=\"formGridAddress1\">\n      <Form.Label>Address</Form.Label>\n      <Form.Control placeholder=\"1234 Main St\" ref=\"Description\"/>\n    </Form.Group>\n\n\n\n    <Form.Row style={{marginTop:30}}>\n      <Form.Group as={Col} controlId=\"formGridCity\">\n      <Form.File\n         id=\"custom-file\"\n         label=\"Custom file input\"\n         data-browse=\"Add Img\"\n         custom\n       />\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"formGridState\">\n      <Form.File\n         id=\"custom-file\"\n         label=\"Custom file input\"\n         data-browse=\"Add Vid\"\n         custom\n       />\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"formGridZip\">\n      <Form.File\n         id=\"custom-file\"\n         label=\"Custom file input\"\n         data-browse=\"Add Doc\"\n         custom\n       />\n      </Form.Group>\n    </Form.Row>\n\n\n    <Button variant=\"primary\" type=\"submit\">\n      Submit\n    </Button>\n  </Form>\n</div>\n\n         );\n\n  }\n}\nexport  default  UploadPost;\n"]},"metadata":{},"sourceType":"module"}