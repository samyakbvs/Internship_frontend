{"ast":null,"code":"var _jsxFileName = \"/Users/samyakjain/Desktop/Metacube/Internship_frontend/src/UploadPost.js\";\nimport React, { Component } from 'react';\nimport PostService from './PostService';\nimport $ from 'jquery';\nimport { Form, Col, Button, Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport bsCustomFileInput from 'bs-custom-file-input';\nconst postService = new PostService();\n\nclass UploadPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n      console.log(\"blah\");\n    };\n\n    this.handleFileChange = e => {\n      this.setState({\n        [e.target.id]: e.target.files[0]\n      });\n      console.log(e.target.id);\n    };\n\n    this.handleSubmit = e => {\n      var today = new Date();\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \"T\" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \"Z\";\n      let form_data = new FormData();\n      form_data.append('Name', this.state.Name);\n      form_data.append('Init_time', date);\n      form_data.append('Author', this.state.Author);\n      form_data.append('Description', this.state.Description);\n\n      if (this.state.Video != null) {\n        form_data.append('Video', this.state.Video, this.state.Video.name);\n      }\n\n      if (this.state.Image != null) {\n        form_data.append('Image', this.state.Image, this.state.Image.name);\n      }\n\n      if (this.state.Doc != null) {\n        form_data.append('Doc', this.state.Doc, this.state.Doc.name);\n      }\n\n      console.log(this.state);\n      postService.createPost(form_data);\n      e.preventDefault();\n    };\n\n    this.onChangeHandler = event => {};\n\n    this.state = {\n      Name: \"\",\n      Init_time: \"\",\n      Author: \"\",\n      Description: \"\",\n      Video: null,\n      Image: null,\n      Doc: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    $(document).ready(function () {\n      bsCustomFileInput.init();\n    });\n  }\n\n  render() {\n    const validateSchema = Yup.object().shape({\n      Title: Yup.string().min(5, 'Too Short!').max(50, 'Too Long!').required('Required'),\n      Author: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n      Description: Yup.string().min(40, 'Too short').required('Required')\n    });\n    return React.createElement(\"body\", {\n      style: {\n        paddingTop: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Hello\"), React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: console.log,\n      initialValues: {\n        firstName: 'Mark',\n        lastName: 'Otto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"First name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"firstName\",\n      value: values.firstName,\n      onChange: handleChange,\n      isValid: touched.firstName && !errors.firstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Looks good!\")), React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"lastName\",\n      value: values.lastName,\n      onChange: handleChange,\n      isValid: touched.lastName && !errors.lastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Looks good!\")), React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormikUsername\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Username\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"@\")), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Username\",\n      \"aria-describedby\": \"inputGroupPrepend\",\n      name: \"username\",\n      value: values.username,\n      onChange: handleChange,\n      isInvalid: !!errors.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, errors.username)))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      md: \"6\",\n      controlId: \"validationFormik03\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"City\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"City\",\n      name: \"city\",\n      value: values.city,\n      onChange: handleChange,\n      isInvalid: !!errors.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, errors.city)), React.createElement(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"validationFormik04\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"State\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"State\",\n      name: \"state\",\n      value: values.state,\n      onChange: handleChange,\n      isInvalid: !!errors.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, errors.state)), React.createElement(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"validationFormik05\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Zip\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Zip\",\n      name: \"zip\",\n      value: values.zip,\n      onChange: handleChange,\n      isInvalid: !!errors.zip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, errors.zip))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      required: true,\n      name: \"terms\",\n      label: \"Agree to terms and conditions\",\n      onChange: handleChange,\n      isInvalid: !!errors.terms,\n      feedback: errors.terms,\n      id: \"validationFormik0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Submit form\"))));\n  }\n\n}\n\nexport default UploadPost;","map":{"version":3,"sources":["/Users/samyakjain/Desktop/Metacube/Internship_frontend/src/UploadPost.js"],"names":["React","Component","PostService","$","Form","Col","Button","Navbar","Nav","NavDropdown","Formik","Yup","bsCustomFileInput","postService","UploadPost","constructor","props","handleChange","e","setState","target","id","value","console","log","handleFileChange","files","handleSubmit","today","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","form_data","FormData","append","state","Name","Author","Description","Video","name","Image","Doc","createPost","preventDefault","onChangeHandler","event","Init_time","bind","componentDidMount","document","ready","init","render","validateSchema","object","shape","Title","string","min","max","required","paddingTop","schema","firstName","lastName","handleBlur","values","touched","isValid","errors","username","city","zip","terms"],"mappings":"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","sourcesContent":["import  React, { Component } from  'react';\nimport  PostService  from  './PostService';\nimport $ from 'jquery';\nimport {Form,Col,Button,Navbar,Nav,NavDropdown} from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\n\nimport bsCustomFileInput from 'bs-custom-file-input'\n\nconst  postService  =  new  PostService();\n\n\nclass  UploadPost  extends  Component {\n\n\n\n\nconstructor(props) {\n    super(props);\n\n    this.state = {\n      Name: \"\",\n      Init_time: \"\",\n      Author: \"\",\n      Description: \"\",\n      Video: null,\n      Image: null,\n      Doc: null\n\n      };\nthis.handleSubmit = this.handleSubmit.bind(this)\n}\n\ncomponentDidMount() {\n\n  $(document).ready(function () {\n    bsCustomFileInput.init()\n  })\n}\n\nhandleChange = (e) => {\n  this.setState({\n    [e.target.id]: e.target.value\n  })\n  console.log(\"blah\")\n};\n\nhandleFileChange = (e) => {\n  this.setState({\n  [e.target.id]: e.target.files[0]\n\n  })\n  console.log(e.target.id)\n};\n\nhandleSubmit = (e) => {\n  var today = new Date()\n  var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate() + \"T\" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() +\"Z\";\n\n  let form_data = new FormData();\n\n  form_data.append('Name', this.state.Name);\n  form_data.append('Init_time', date);\n  form_data.append('Author', this.state.Author);\n  form_data.append('Description', this.state.Description);\n  if (this.state.Video != null) {\n    form_data.append('Video', this.state.Video, this.state.Video.name);\n  }\nif (this.state.Image != null) {\n  form_data.append('Image', this.state.Image, this.state.Image.name);\n\n}\nif (this.state.Doc != null) {\n  form_data.append('Doc', this.state.Doc, this.state.Doc.name);\n}\n\n\nconsole.log(this.state)\npostService.createPost(form_data)\n\n  e.preventDefault()\n\n\n\n\n};\n\n\nonChangeHandler=event=>{\n\n}\n\n\nrender() {\n  const validateSchema = Yup.object().shape({\n  Title: Yup.string()\n    .min(5, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  Author: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  Description: Yup.string()\n    .min(40, 'Too short')\n    .required('Required'),\n});\n\n\n  return (\n\n\n  <body style={{paddingTop:0}}>\n    <h1>Hello</h1>\n      <Formik\n        validationSchema={schema}\n        onSubmit={console.log}\n        initialValues={{\n          firstName: 'Mark',\n          lastName: 'Otto',\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors,\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Row>\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\n                <Form.Label>First name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"firstName\"\n                  value={values.firstName}\n                  onChange={handleChange}\n                  isValid={touched.firstName && !errors.firstName}\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\n                <Form.Label>Last name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"lastName\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  isValid={touched.lastName && !errors.lastName}\n                />\n\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\n                <Form.Label>Username</Form.Label>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    aria-describedby=\"inputGroupPrepend\"\n                    name=\"username\"\n                    value={values.username}\n                    onChange={handleChange}\n                    isInvalid={!!errors.username}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.username}\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\n                <Form.Label>City</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"City\"\n                  name=\"city\"\n                  value={values.city}\n                  onChange={handleChange}\n                  isInvalid={!!errors.city}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.city}\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\n                <Form.Label>State</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"State\"\n                  name=\"state\"\n                  value={values.state}\n                  onChange={handleChange}\n                  isInvalid={!!errors.state}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.state}\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\n                <Form.Label>Zip</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Zip\"\n                  name=\"zip\"\n                  value={values.zip}\n                  onChange={handleChange}\n                  isInvalid={!!errors.zip}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.zip}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Group>\n              <Form.Check\n                required\n                name=\"terms\"\n                label=\"Agree to terms and conditions\"\n                onChange={handleChange}\n                isInvalid={!!errors.terms}\n                feedback={errors.terms}\n                id=\"validationFormik0\"\n              />\n            </Form.Group>\n            <Button type=\"submit\">Submit form</Button>\n          </Form>\n        )}\n      </Formik>\n{/*\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"/\">Home</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n\n      <Nav>\n        <Nav.Link href=\"/posts/\">Docs</Nav.Link>\n        <Nav.Link href=\"/Upload/\">\n          Upload\n        </Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n\n  <div className=\"container\">\n\n  <Formik\n       initialValues={{\n          Title: '',\n          Author: '',\n          Description: '',\n       }}\n       validationSchema={validateSchema}\n       onSubmit={values => {\n         console.log(values);\n       }}\n     >\n       {({ errors, touched }) => (\n  <Form style={{marginTop:50}} onSubmit =  {this.handleSubmit}>\n<h1> Upload material</h1>\n<br/>\n    <Form.Row>\n      <Form.Group as={Col} >\n\n        <Form.Control type=\"text\" placeholder=\"Email\" id=\"Name\"\n        onChange = {this.handleChange} />\n      </Form.Group>\n\n      <Form.Group as={Col} >\n\n        <Form.Control type=\"text\" placeholder=\"Author\" id=\"Author\"\n        onChange = {this.handleChange}/>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Group >\n\n      <Form.Control placeholder=\"Description\" id=\"Description\"\n      onChange = {this.handleChange}/>\n    </Form.Group>\n\n\n\n    <Form.Row >\n      <Form.Group as={Col} controlId=\"formGridCity\">\n      <Form.File\n      onChange = {this.handleFileChange}\n         id=\"Video\"\n         label=\"Video\"\n         data-browse=\"Add\"\n         custom\n       />\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"formGridState\">\n      <Form.File\n      onChange = {this.handleFileChange}\n         id=\"Image\"\n         label=\"Image\"\n         data-browse=\"Add\"\n         custom\n\n\n       />\n      </Form.Group>\n\n      <Form.Group as={Col} controlId=\"formGridZip\">\n      <Form.File\n        onChange = {this.handleFileChange}\n         id=\"Doc\"\n         label=\"Docs\"\n         data-browse=\"Add\"\n         custom\n\n       />\n      </Form.Group>\n    </Form.Row>\n    <br/>\n\n    <Button variant=\"primary\" type=\"submit\">\n      Submit\n    </Button>\n  </Form>\n)}\n </Formik>\n\n</div>\n  */}\n</body>\n\n\n\n\n);\n\n  }\n}\nexport  default  UploadPost;\n"]},"metadata":{},"sourceType":"module"}