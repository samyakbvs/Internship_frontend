{"ast":null,"code":"var _jsxFileName = \"/Users/samyakjain/Desktop/Metacube/Internship_frontend/src/Post/Components/Homepage.js\";\nimport React, { Component } from 'react';\nimport PostService from '../Action/PostService';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/auth';\nimport { Card, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { Form, Button } from 'react-bootstrap';\nconst postService = new PostService();\n\nclass Homepage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        Query: e.target.value\n      });\n    };\n\n    this.state = {\n      Query: \"\"\n    };\n  }\n\n  componentDidMount() {\n    var self = this;\n  }\n\n  render() {\n    return React.createElement(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      collapseOnSelect: true,\n      expand: \"lg\",\n      bg: \"dark\",\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Home\")), React.createElement(Navbar.Toggle, {\n      \"aria-controls\": \"responsive-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      className: \"justify-content-end\",\n      id: \"responsive-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/posts/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Docs\")), React.createElement(Nav.Link, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Upload/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Upload\")), React.createElement(Nav.Link, {\n      onClick: this.props.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Logout\")), React.createElement(Nav.Link, {\n      className: \"version\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"v 1.0\")))), React.createElement(\"div\", {\n      className: \"jumbotron container \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Learning Management System\"), React.createElement(\"div\", {\n      style: {\n        width: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h8\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"This webapp aims to cater to the needs of professional firms, who require a platform to share their resources. For now the webapp allows the user to upload videos/images/documents, support for other media types would be added in the further versions. \")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      autocomplete: \"off\",\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Jump directly to your desired post.\")), React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Link, {\n      id: \"search\",\n      to: \"/searchPost/\" + this.state.Query,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    isStaff: state.is_staff\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(actions.logout())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Homepage));","map":{"version":3,"sources":["/Users/samyakjain/Desktop/Metacube/Internship_frontend/src/Post/Components/Homepage.js"],"names":["React","Component","PostService","Link","withRouter","connect","actions","Card","Nav","Navbar","NavDropdown","Form","Button","postService","Homepage","constructor","props","handleChange","e","setState","Query","target","value","state","componentDidMount","self","render","logout","width","mapStateToProps","isAuthenticated","token","isStaff","is_staff","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import  React, { Component } from  'react';\nimport  PostService  from  '../Action/PostService';\nimport {Link,withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../store/actions/auth';\nimport {Card,Nav,Navbar,NavDropdown} from 'react-bootstrap'\nimport {Form,Button} from 'react-bootstrap'\nconst  postService  =  new  PostService();\n\nclass  Homepage  extends  Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        Query: \"\"\n\n        };\n  }\n\n\n  componentDidMount() {\n    var self = this;\n\n\n  }\n\n\n  handleChange = (e) => {\n    this.setState({\n      Query: e.target.value\n    })\n  };\n  render() {\n\n    return (\n    <body>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand ><Link to=\"/\">Home</Link></Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n\n        <Nav>\n          <Nav.Link ><Link to=\"/posts/\">Docs</Link></Nav.Link>\n          <Nav.Link ><Link to=\"/Upload/\">\n            Upload\n          </Link></Nav.Link>\n          <Nav.Link onClick={this.props.logout} >\n              <Link to=\"/\">Logout</Link>\n            </Nav.Link>\n            <Nav.Link className=\"version\" >\n              v 1.0\n              </Nav.Link>\n\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n      <div className=\"jumbotron container \">\n\n        <h1>Learning Management System</h1>\n        <div style={{ width:'80%'}}>\n        <h8>This webapp aims to cater to the needs of professional firms, who require a platform to share their resources. For now the webapp allows the user to upload videos/images/documents, support for other media types would be added in the further versions. </h8>\n</div>\n\n        <br />\n\n      <Form>\n    <Form.Group controlId=\"formBasicEmail\">\n\n      <Form.Control autocomplete=\"off\" onChange={this.handleChange} type=\"text\" placeholder=\"Search\" />\n      <Form.Text className=\"text-muted\">\n        Jump directly to your desired post.\n      </Form.Text>\n    </Form.Group>\n\n\n    <Button variant=\"primary\" >\n      <Link id=\"search\"to={\"/searchPost/\" + this.state.Query}>Submit</Link>\n    </Button>\n  </Form>\n</div>\n\n          </body>);\n}\n\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tisAuthenticated: state.token !== null,\n    isStaff: state.is_staff\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tlogout: () => dispatch(actions.logout())\n\t};\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Homepage));\n"]},"metadata":{},"sourceType":"module"}