{"ast":null,"code":"var _jsxFileName = \"/Users/samyakjain/Desktop/Metacube/Internship_frontend/src/Post/Components/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from './src/store/actions/auth';\nimport { Form, Spin, Icon, Input, Button } from 'antd';\nconst antIcon = React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n});\nconst FormItem = Form.Item;\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) this.props.onAuth(values.username, values.password, false);\n      });\n      this.props.history.push('/');\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.error.message);\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, errorMessage, this.props.loading ? React.createElement(Spin, {\n      indicator: antIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Login\"), \"Or\", React.createElement(NavLink, {\n      style: {\n        marginRight: '10px'\n      },\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" signup\"))));\n  }\n\n}\n\nconst WrappedAuth = Form.create()(Login);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedAuth);","map":{"version":3,"sources":["/Users/samyakjain/Desktop/Metacube/Internship_frontend/src/Post/Components/Login.js"],"names":["React","connect","NavLink","actions","Form","Spin","Icon","Input","Button","antIcon","fontSize","FormItem","Item","Login","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","onAuth","username","password","history","push","render","errorMessage","error","message","getFieldDecorator","loading","rules","required","color","marginRight","WrappedAuth","create","mapStateToProps","state","mapDispatchToProps","dispatch","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from './src/store/actions/auth';\nimport { Form, Spin, Icon, Input, Button } from 'antd';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\nconst FormItem = Form.Item;\n\nclass Login extends React.Component {\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) this.props.onAuth(values.username, values.password, false);\n        });\n        this.props.history.push('/');\n    }\n\n    render() {\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div>\n                {errorMessage}\n                {\n                    this.props.loading ?\n\n                    <Spin indicator={antIcon} />\n\n                    :\n\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                        <FormItem>\n                            {getFieldDecorator('username', {\n                                rules: [{\n                                    required: true, message: 'Please input your username!',\n                                }],\n                            })(\n                                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                            )}\n                        </FormItem>\n\n                        <FormItem>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: 'Please input your Password!' }],\n                            })(\n                                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                            )}\n                        </FormItem>\n\n                        <FormItem>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                                Login\n                            </Button>\n                            Or\n                            <NavLink\n                                style={{marginRight: '10px'}}\n                                to=\"/signup\"> signup\n                            </NavLink>\n                        </FormItem>\n\n                    </Form>\n                }\n            </div>\n        );\n    }\n}\n\nconst WrappedAuth = Form.create()(Login);\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.loading,\n        error: state.error\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedAuth);\n"]},"metadata":{},"sourceType":"module"}