{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, is_staff) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    is_staff: is_staff\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('is_staff');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(`http://127.0.0.1:8000/rest-auth/login/`, {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const is_staff = res.data.user.is_staff;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000); // 1 hour\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('is_staff', is_staff);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token, is_staff));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(`http://127.0.0.1:8000/rest-auth/registration/`, {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const is_staff = res.data.user.is_staff;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000); // 1 hour\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('is_staff', is_staff);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token, is_staff));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const is_staff = localStorage.getItem('is_staff');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token, is_staff));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/samyakjain/Desktop/Metacube/Internship_frontend/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","is_staff","AUTH_SUCCESS","authFail","error","AUTH_FAIL","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","localStorage","removeItem","AUTH_LOGOUT","authLogin","username","password","post","then","res","data","key","user","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token,is_staff) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        is_staff:is_staff\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('is_staff');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(`http://127.0.0.1:8000/rest-auth/login/`, {\n            username: username,\n            password: password\n        })\n        .then(res => {\n            const token = res.data.key;\n            const is_staff = res.data.user.is_staff;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000); // 1 hour\n            localStorage.setItem('token', token);\n            localStorage.setItem('is_staff', is_staff);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token,is_staff));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err));\n        })\n    };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(`http://127.0.0.1:8000/rest-auth/registration/`, {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const is_staff = res.data.user.is_staff;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000); // 1 hour\n            localStorage.setItem('token', token);\n            localStorage.setItem('is_staff', is_staff);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token,is_staff));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err));\n        })\n    };\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        const is_staff = localStorage.getItem('is_staff');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token,is_staff));\n                dispatch(checkAuthTimeout( ( expirationDate.getTime() - new Date().getTime() ) / 1000 ));\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}